{"version":3,"sources":["components/Card/Card.component.tsx","components/ListingPage/ListingPage.component.tsx","shared/actions/index.tsx","shared/constants/action-types.tsx","components/NotFound/NotFound.component.tsx","Routes/Routes.component.tsx","App.tsx","serviceWorker.ts","index.tsx","shared/reducers/index.tsx"],"names":["Card","props","img","PUBLIC_URL","process","className","alt","src","this","data","ref","onError","e","name","React","mapActionsToProps","searchDetailsActionFn","items","type","payload","ListingPage","state","searchTimer","searchKeyword","enableSearch","dataLoading","dataEnd","content","handleScroll","bind","fetchData","window","addEventListener","nextProps","searchDetailsActionData","length","setState","initializeParams","searchContent","windowHeight","innerHeight","document","documentElement","offsetHeight","body","html","docHeight","Math","max","scrollHeight","clientHeight","pageYOffset","offset","limit","axios","post","then","res","concat","catch","err","console","log","keyword","target","value","clearTimeout","setTimeout","removeEventListener","onChange","inputChange","placeholder","onClick","toggleSearch","map","index","key","connect","searchDetails","NotFound","Routes","path","component","exact","App","Boolean","location","hostname","match","history","createHistory","store","createStore","action","result","filter","toLowerCase","includes","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"mXAKqBA,G,wBAIjB,WAAYC,GAAa,IAAD,8BACpB,4CAAMA,KAJVA,WAGwB,IAFxBC,SAEwB,IADxBC,WAAaC,uBACW,E,sEAGd,IAAD,OACL,OACI,uBAAKC,UAAU,eACX,uBAAKA,UAAU,SAASC,IAAI,OAAOC,IAAKC,KAAKL,WAAW,WAAWK,KAAKP,MAAMQ,KAAK,gBAAiBC,IAAK,SAAAR,GAAG,OAAI,EAAKA,IAAMA,GAAKS,QAAS,SAACC,GAAD,OAAK,EAAKV,IAAIK,IAAI,EAAKJ,WAAW,iDAC3K,qBAAGE,UAAU,yCAAyCG,KAAKP,MAAMQ,KAAKI,W,GAXpDC,c,6BCM5BC,EAAoB,CACtBC,sBCNG,SAAuBC,GAC1B,MAAO,CAAEC,KCPiB,iBDOeC,QAASF,KDQhDG,E,YAMF,WAAYnB,GAAa,IAAD,8BACpB,4CAAMA,KANVoB,WAKwB,IAJxBpB,WAIwB,IAHxBE,WAAaC,uBAGW,EAFxBkB,iBAEwB,IADxBC,mBACwB,EAEpB,EAAKF,MAAQ,CACTG,cAAa,EACbC,aAAY,EACZC,SAAQ,EACRC,QAAQ,IAEZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBARA,E,kFAWpBrB,KAAKsB,UAAU,EAlBT,IAmBNC,OAAOC,iBAAiB,SAAUxB,KAAKoB,gB,gDAEjBK,GACnBzB,KAAKe,gBACDU,EAAUC,wBAAwBC,OAAS,EAC1C3B,KAAK4B,SAAS,CAACT,QAAQM,EAAUC,2BAEjC1B,KAAK6B,mBACL7B,KAAK8B,cAAc9B,KAAKe,mB,qCAKhC,IAAGf,KAAKe,eAAqC,MAApBf,KAAKe,cAA9B,CAGA,IAAMgB,EAAe,gBAAiBR,OAASA,OAAOS,YAAcC,SAASC,gBAAgBC,aACvFC,EAAeH,SAASG,KACxBC,EAAeJ,SAASC,gBAC1BI,EAAiBC,KAAKC,IAAIJ,EAAKK,aAAcL,EAAKD,aAAcE,EAAKK,aAAcL,EAAKI,aAAcJ,EAAKF,cAC1FJ,EAAeR,OAAOoB,cAC3CL,GAAkC,GAAIA,IAElCtC,KAAKsB,UAAUtB,KAAKa,MAAMM,QAAQQ,OA1ChC,O,yCA8CN3B,KAAKa,MAAMK,SAAc,EACzBlB,KAAKa,MAAMI,aAAc,EACzBjB,KAAK4B,SAAS,CAACV,QAAQlB,KAAKa,MAAMK,QAAQC,QAAQ,GAAGF,aAAY,M,kCAEvC,IAAD,OAAnB2B,EAAmB,uDAAZ,EAAEC,EAAU,uDAAJ,GAClB7C,KAAKa,MAAMI,cAAsC,IAAvBjB,KAAKa,MAAMK,UAGxClB,KAAKa,MAAMI,aAAc,EACzBjB,KAAK4B,SAAS,CAACX,aAAY,IAC3B6B,IAAMC,KAAKnD,4EAA+C,CAACgD,SAAOC,UACjEG,MAAK,SAACC,GAEH,GADA,EAAKrB,SAAS,CAACX,aAAY,IACxBgC,GAAOA,EAAIhD,MAAQgD,EAAIhD,KAAK0B,OAAS,EAAG,CACvC,IAAIR,EAAU,EAAKN,MAAMM,QAAQ+B,OAAOD,EAAIhD,MAC5C,EAAK2B,SAAS,CAACT,QAAQA,SAEvB,EAAKS,SAAS,CAACV,SAAQ,OAE5BiC,OAAM,SAACC,GACNC,QAAQC,IAAI,QAAQF,S,oCAGdG,GAAiB,IAAD,OACvBvD,KAAKa,MAAMI,cAGdjB,KAAKa,MAAMI,aAAc,EACzBjB,KAAK4B,SAAS,CAACX,aAAY,EAAKE,QAAQ,KACxC2B,IAAMC,KAAKnD,6EAAgD,CAAC2D,YAC3DP,MAAK,SAACC,GACH,EAAKrB,SAAS,CAACX,aAAY,IACxBgC,GAAOA,EAAIhD,MAAQgD,EAAIhD,KAAK0B,OAAS,EACpC,EAAKC,SAAS,CAACT,QAAQ8B,EAAIhD,OAE3B,EAAK2B,SAAS,CAACV,SAAQ,OAE5BiC,OAAM,SAACC,GACNC,QAAQC,IAAI,QAAQF,S,qCAIxB,IAAIpC,GAAgBhB,KAAKa,MAAMG,aAC/BhB,KAAK4B,SAAS,CAACZ,aAAaA,M,kCAEpBZ,GAAQ,IAAD,OACfJ,KAAKe,cAAgBX,EAAEoD,OAAOC,MAC9BC,aAAa1D,KAAKc,aACdd,KAAKe,eAAwC,KAAvBf,KAAKe,cAI3Bf,KAAKc,YAAc6C,YAAW,WAC1B,EAAKlE,MAAMe,sBAAsB,CAAC+C,QAAQ,EAAKxC,cAAcI,QAAQ,EAAKN,MAAMM,YAClF,MALFnB,KAAK6B,mBACL7B,KAAKsB,UAAU,EAhGb,O,6CAwGNC,OAAOqC,oBAAoB,SAAU5D,KAAKoB,gB,+BAEpC,IAAD,OACL,OACI,uBAAKvB,UAAU,qBACX,uBAAKA,UAAU,+CACX,uBAAKA,UAAU,0BACX,uBAAKA,UAAU,iCAAiCC,IAAI,OAAOC,IAAKC,KAAKL,WAAW,qBAChF,wBAAME,UAAU,wCAAhB,oBAEJ,uBAAKA,UAAU,2BACVG,KAAKa,MAAMG,cACR,yBAAO6C,SAAU,SAACzD,GAAD,OAAK,EAAK0D,YAAY1D,IAAIP,UAAU,sBAAsBa,KAAK,OAAOqD,YAAY,cAEvG,uBAAKC,QAAS,SAAC5D,GAAD,OAAK,EAAK6D,gBAAgBnE,IAAI,SAASD,UAAU,qCAAqCE,IAAKC,KAAKL,WAAW,yBAGjI,uBAAKE,UAAU,kEACTG,KAAKa,MAAMM,QAAQQ,OAAS,IAAM3B,KAAKa,MAAMI,cAC3C,uBAAKpB,UAAU,gCACVG,KAAKa,MAAMM,QAAQ+C,KAAI,SAACT,EAAWU,GAChC,OAAO,gBAAC,EAAD,CAAMC,IAAKD,EAAOlE,KAAMwD,QAIZ,IAA9BzD,KAAKa,MAAMM,QAAQQ,QAAgB3B,KAAKa,MAAMI,aAC3C,uBAAKpB,UAAU,oCAAf,oBAEHG,KAAKa,MAAMM,QAAQQ,OAAS,GAAK3B,KAAKa,MAAMI,aACzC,uBAAKpB,UAAU,oCAAf,yBAE2B,IAA9BG,KAAKa,MAAMM,QAAQQ,SAAiB3B,KAAKa,MAAMI,aAC5C,uBAAKpB,UAAU,oCAAf,oC,GAvIES,aA8IX+D,eAtJS,SAACxD,GAAD,MAAiB,CACrCa,wBAAyBb,EAAMyD,iBAqJK/D,EAAzB8D,CAA4CzD,GG5JtC2D,E,iLAEb,OACI,iD,GAH0BjE,aCIjBkE,E,iLAEb,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAOC,KAAK,uBAAuBC,UAAW9D,EAAa+D,OAAK,IAChE,gBAAC,IAAD,CAAOF,KAAK,IAAIC,UAAWH,S,GALPjE,aCOrBsE,MARf,WACE,OACE,yBAAK/E,UAAU,OACb,kBAAC,EAAD,QCKcgF,QACW,cAA7BtD,OAAOuD,SAASC,UAEe,UAA7BxD,OAAOuD,SAASC,UAEhBxD,OAAOuD,SAASC,SAASC,MACvB,2D,qCCNN,IAAMC,EAAUC,MAEVC,EAAQC,aCXP,SAAqBvE,EAAmBwE,GAE3C,GNL0B,mBMKtBA,EAAO3E,KAAyB,CAChC,IAAM4E,EAASD,EAAO1E,QAAQQ,QAAQoE,QAAO,SAACtF,GAAD,OAAcA,EAAKI,KAAKmF,cAAcC,SAASJ,EAAO1E,QAAQ4C,QAAQiC,kBACnH,OAAO,eAAK3E,EAAZ,CAAmByD,cAAegB,IAElC,OAAOzE,IDKoC,CAC/CyD,cAAe,KAGnBoB,IAASC,OACL,kBAAC,IAAD,CAAUR,MAAOA,GACjB,kBAAC,IAAD,CAAQF,QAASA,GACb,kBAAC,EAAD,QAEShD,SAAS2D,eAAe,SDoHnC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/C,MAAK,SAAAgD,GACJA,EAAaC,gBAEd9C,OAAM,SAAA+C,GACL7C,QAAQ6C,MAAMA,EAAMC,c","file":"static/js/main.d89d19db.chunk.js","sourcesContent":["import * as React from 'react';\nimport './Card.css';\ninterface ComponentProps {\n    data: Object;\n}\nexport default class Card extends React.Component<ComponentProps> {\n    props:any;\n    img:any;\n    PUBLIC_URL = process.env.PUBLIC_URL;\n    constructor(props: any) {\n        super(props);\n    }   \n    render() {\n        return (\n            <div className=\"ml-30 mb-90\">\n                <img className=\"w-full\" alt='back' src={this.PUBLIC_URL+'/images/'+this.props.data['poster-image']} ref={img => this.img = img} onError={(e)=>this.img.src=this.PUBLIC_URL+'/images/placeholder_for_missing_posters.png'}/>\n                <p className=\"text-left font-light text-white tx-36\">{this.props.data.name}</p>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport './ListingPage.css';\nimport Card from '../Card/Card.component';\nimport { searchDetails as searchDetailsAction } from '../../shared/actions';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nconst mapStateToProps = (state: any) => ({\n    searchDetailsActionData: state.searchDetails\n});\n\nconst mapActionsToProps = {\n    searchDetailsActionFn: searchDetailsAction\n};\nconst limit = 20;\nclass ListingPage extends React.Component {\n    state:any;\n    props:any;\n    PUBLIC_URL = process.env.PUBLIC_URL;\n    searchTimer:any;\n    searchKeyword:any;\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            enableSearch:false,\n            dataLoading:false,\n            dataEnd:false,\n            content:[]\n        }\n        this.handleScroll = this.handleScroll.bind(this);\n    }   \n    componentWillMount() {\n        this.fetchData(0,limit);\n        window.addEventListener(\"scroll\", this.handleScroll);\n    }\n    componentWillReceiveProps(nextProps:any){\n        if(this.searchKeyword) {\n            if(nextProps.searchDetailsActionData.length > 0) {\n                this.setState({content:nextProps.searchDetailsActionData});\n            } else {\n                this.initializeParams();\n                this.searchContent(this.searchKeyword);\n            }\n        }\n    }\n    handleScroll() {\n        if(this.searchKeyword && this.searchKeyword!=null) {\n            return;\n        }\n        const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\n        const body         = document.body;\n        const html         = document.documentElement;\n        var docHeight      = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n        const windowBottom = windowHeight + window.pageYOffset;\n        docHeight          = docHeight - (0.3*docHeight); \n        if (windowBottom >= docHeight) {\n            this.fetchData(this.state.content.length,limit);\n        } \n    }\n    initializeParams() {\n        this.state.dataEnd     = false;\n        this.state.dataLoading = false;\n        this.setState({dataEnd:this.state.dataEnd,content:[],dataLoading:false});\n    }\n    fetchData(offset=0,limit=20) {\n        if(this.state.dataLoading || this.state.dataEnd === true) {\n            return;\n        }\n        this.state.dataLoading = true;\n        this.setState({dataLoading:true});\n        axios.post(process.env.REACT_APP_API_HOST+\"fetchContents\",{offset,limit})\n        .then((res) => { \n            this.setState({dataLoading:false});\n            if(res && res.data && res.data.length > 0) {\n                var content = this.state.content.concat(res.data);\n                this.setState({content:content});\n            } else {\n                this.setState({dataEnd:true});\n            }\n        }).catch((err)=> {\n            console.log('error',err);\n        });\n    }\n    searchContent(keyword:String) {\n        if(this.state.dataLoading) {\n            return;\n        }\n        this.state.dataLoading = true;\n        this.setState({dataLoading:true,content:[]});\n        axios.post(process.env.REACT_APP_API_HOST+\"searchContents\",{keyword})\n        .then((res) => { \n            this.setState({dataLoading:false});\n            if(res && res.data && res.data.length > 0) {\n                this.setState({content:res.data});\n            } else {\n                this.setState({dataEnd:true});\n            }\n        }).catch((err)=> {\n            console.log('error',err);\n        });\n    }\n    toggleSearch() {\n        let enableSearch = !this.state.enableSearch;\n        this.setState({enableSearch:enableSearch});\n    }\n    inputChange(e:any) {\n        this.searchKeyword = e.target.value;\n        clearTimeout(this.searchTimer);\n        if(!this.searchKeyword || this.searchKeyword === '') {\n            this.initializeParams();\n            this.fetchData(0,limit);\n        } else {\n            this.searchTimer = setTimeout(() => {\n                this.props.searchDetailsActionFn({keyword:this.searchKeyword,content:this.state.content});\n            },300);\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"scroll\", this.handleScroll);\n    }\n    render() {\n        return (\n            <div className='container mx-auto'>\n                <div className=\"container mx-auto fixed bg-black header-box\">\n                    <div className=\"float-left mt-24 ml-30\">\n                        <img className=\"cursor-pointer float-left  h-8\" alt='back' src={this.PUBLIC_URL+'/images/Back.png'} />\n                        <span className=' pl-4 leading-8 text-white font-bold'>Romantic Comedy</span>\n                    </div>\n                    <div className=\"float-right mt-24 mr-30\">\n                        {this.state.enableSearch &&\n                            <input onChange={(e)=>this.inputChange(e)} className=\"float-left h-8 w-32\" type=\"text\" placeholder='Search...'/>\n                        }\n                        <img onClick={(e)=>this.toggleSearch()} alt='search' className=\"cursor-pointer pl-4 float-left h-8\" src={this.PUBLIC_URL+'/images/search.png'} />\n                    </div>\n                </div>\n                <div className='container mx-auto mt-192 mb-30 contentbox float-left bg-black'>\n                    {(this.state.content.length > 0 || !this.state.dataLoading) &&\n                        <div className=\"grid grid-cols-3 mt-30 pr-30\">\n                            {this.state.content.map((value:any, index:any) => {\n                                return <Card key={index} data={value}/>;\n                            })}\n                        </div>\n                    }\n                    {this.state.content.length === 0 && this.state.dataLoading &&\n                        <div className='text-center text-white font-bold'>Loading Contents</div>\n                    }\n                    {this.state.content.length > 0 && this.state.dataLoading &&\n                        <div className='text-center text-white font-bold'>Loading More Contents</div>\n                    }\n                    {this.state.content.length === 0 && !this.state.dataLoading &&\n                        <div className='text-center text-white font-bold'>No Matching Contents Found</div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\nexport default connect(mapStateToProps, mapActionsToProps)(ListingPage);","import * as constants from '../constants/action-types';\n\nexport interface searchDetails {\n    type: constants.SEARCH_DETAILS;\n    payload: [{}];\n}\nexport function searchDetails(items: any):  searchDetails {\n    return { type: constants.SEARCH_DETAILS, payload: items };\n}\n","export const SEARCH_DETAILS = 'SEARCH_DETAILS';\nexport type SEARCH_DETAILS = typeof SEARCH_DETAILS;","import * as React from 'react';\nexport default class NotFound extends React.Component {\n    render() {\n        return (\n            <div>\n                Page Not Found\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport {  Route, Switch } from 'react-router-dom';\nimport ListingPage from '../components/ListingPage/ListingPage.component';\nimport NotFound from '../components/NotFound/NotFound.component';\n\nexport default class Routes extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route path=\"/diagnal-frontendapp\" component={ListingPage} exact /> \n                <Route path=\"*\" component={NotFound} />\n            </Switch>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport Routes from './Routes/Routes.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/tailwind.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { StoreState } from './shared/types/index';\nimport { rootReducer } from './shared/reducers/index';\nconst history = createHistory();\n\nconst store = createStore<StoreState>(rootReducer, {\n    searchDetails: []\n}); \n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(\n    <Provider store={store as any}>\n    <Router history={history}>\n        <App />\n    </Router>\n    </Provider>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { SEARCH_DETAILS } from '../constants/action-types';\nimport { StoreState } from '../types';\n\nexport function rootReducer(state: StoreState, action: any): StoreState {\n\n    if (action.type === SEARCH_DETAILS) {\n        const result = action.payload.content.filter((data:any) => data.name.toLowerCase().includes(action.payload.keyword.toLowerCase()));\n        return { ...state, searchDetails: result  };\n    } else {\n        return state;\n    }\n\n}\n"],"sourceRoot":""}